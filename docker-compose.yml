services:
  auth-db:
    image: postgres:15
    container_name: auth-db
    restart: always
    volumes:
      - auth-db-data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: kanban_user
      POSTGRES_PASSWORD: kanban_pass
      POSTGRES_DB: authdb
      POSTGRES_MULTIPLE_DATABASES: authdb,test_authdb
    ports:
      - "5432:5432"

  auth:
    build:
      context: ./services/auth
    container_name: auth-service
    depends_on:
      - auth-db
      - otel-collector
    environment:
      ENV: docker
      POSTGRES_USER: kanban_user
      POSTGRES_PASSWORD: kanban_pass
      POSTGRES_DB: authdb
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
    env_file:
      - ./services/auth/.env.docker
    volumes:
      - ./services/auth:/app
    ports:
      - "8000:8000"
    command: ["/bin/bash", "/start.sh"]

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: ["--config", "/etc/otel-collector-config.yaml"]
    ports:
      - "4317:4317"  # gRPC receiver for OTLP
      - "4318:4318"  # HTTP 

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./docker/prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - auth

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  auth-db-data:
  grafana-storage:
